/**
 * City class structure definition.
 */
import { Country } from './country';
import { ICountry } from './types';
export declare class City {
    readonly latitude: number;
    readonly longitude: number;
    readonly name: string;
    readonly population: number;
    readonly timezone: string;
    readonly country: ICountry;
    constructor(latitude: number, longitude: number, name: string, population: number, timezone: string, country: ICountry);
    static fromRawJson(cityRaw: any[]): City;
    /**
     * Look up all of the cities matching a name. This can be used for partial matching
     * such as in an look up form field.
     */
    static getAllByName(name: string, countryCode?: string): City[];
    /**
     * Look up a city by name, returning the first one that matches.
     * Optionally also filter on country code.
     */
    static getByName(name: string, countryCode?: string): City | undefined;
    /**
     * Getter for the nested Country object that returns the full object with
     * geoJSON and flag SVG.
     */
    getCountry(): Country;
    /**
     * Get the largest cities. Optionally filter by continent. Optionally speficify
     * the number of largest cities you want, default 10.
     *
     * @param continent One of the 7 (really 6)
     * @param count The number of top largest cities.
     */
    static getLargestCities(continent?: string, count?: number): City[];
    /**
     * Get the city nearest to the GPS coordinates, as determined by the distance,
     * as the crow flies.
     */
    static getNearest(lat: number, lng: number): City;
    /**
     * Get the country nearest to the GPS coordinates, as determined by the distance,
     * as the crow flies.
     */
    static getNearestCountry(lat: number, lng: number): Country;
    /**
     * Get the nearest large city.
     */
    static getNearestLargeCity(lat: number, lng: number): City;
    static get schema(): {
        $schema: string;
        $id: string;
        type: string;
        title: string;
        description: string;
        default: {};
        additionalProperties: boolean;
        required: string[];
        properties: {
            name: {
                type: string;
                title: string;
                description: string;
                default: string;
                examples: string[];
            };
            latitude: {
                type: string;
                title: string;
                description: string;
                minimum: number;
                maximum: number;
                examples: number[];
            };
            longitude: {
                type: string;
                title: string;
                description: string;
                minimum: number;
                maximum: number;
                examples: number[];
            };
            population: {
                type: string;
                title: string;
                description: string;
                default: number;
                minimum: number;
                examples: number[];
            };
            timezone: {
                type: string;
                title: string;
                description: string;
                default: string;
                examples: string[];
            };
            country: {
                $ref: string;
            };
        };
        definitions: {
            country: {
                type: string;
                title: string;
                description: string;
                examples: {
                    languages: string[];
                    capital: string;
                    currencyName: string;
                    callingCode: string;
                    areaSquareMeters: number;
                    countryCode3: string;
                    continent: string;
                    tld: string;
                    name: string;
                    population: number;
                    neighbors: string[];
                    currencyCode: string;
                    countryCode: string;
                    wikipedia: string;
                    postalCodeRegExp: string;
                }[];
                required: string[];
                properties: {
                    name: {
                        type: string;
                        title: string;
                        default: string;
                        examples: string[];
                    };
                    countryCode: {
                        type: string;
                        title: string;
                        description: string;
                        default: string;
                        examples: string[];
                    };
                    countryCode3: {
                        type: string;
                        title: string;
                        description: string;
                        default: string;
                        examples: string[];
                    };
                    capital: {
                        type: string;
                        title: string;
                        description: string;
                        default: string;
                        examples: string[];
                    };
                    areaSquareMeters: {
                        type: string;
                        title: string;
                        description: string;
                        default: number;
                        examples: number[];
                    };
                    population: {
                        type: string;
                        title: string;
                        description: string;
                        default: number;
                        minimum: number;
                        examples: number[];
                    };
                    continent: {
                        type: string;
                        title: string;
                        description: string;
                        enum: string[];
                    };
                    tld: {
                        type: string;
                        title: string;
                        description: string;
                        examples: string[];
                    };
                    currencyCode: {
                        type: string;
                        title: string;
                        description: string;
                        examples: string[];
                    };
                    currencyName: {
                        type: string;
                        title: string;
                        description: string;
                        examples: string[];
                    };
                    callingCode: {
                        type: string;
                        title: string;
                        description: string;
                        examples: string[];
                    };
                    postalCodeRegExp: {
                        type: string;
                        title: string;
                        description: string;
                        default: string;
                        examples: string[];
                    };
                    languages: {
                        type: string;
                        title: string;
                        description: string;
                        default: never[];
                        examples: string[][];
                        items: {
                            type: string;
                            pattern: string;
                        };
                    };
                    neighbors: {
                        type: string;
                        title: string;
                        description: string;
                        default: never[];
                        examples: string[][];
                        items: {
                            type: string;
                            pattern: string;
                        };
                    };
                    wikipedia: {
                        type: string;
                        title: string;
                        description: string;
                        default: string;
                        examples: string[];
                    };
                };
                additionalProperties: boolean;
            };
        };
    };
}
